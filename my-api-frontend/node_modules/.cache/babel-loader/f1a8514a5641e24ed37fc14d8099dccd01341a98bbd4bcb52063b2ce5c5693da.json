{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antosz\\\\my-api-frontend\\\\src\\\\Media\\\\MediaLister.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MediaService from './MediaService'; // Adjust the import based on your project structure\nimport ListHeader from '../components/ListHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaLister = () => {\n  _s();\n  const [medias, setMedias] = useState([]); // Store all media\n  const [filteredMedias, setFilteredMedias] = useState([]); // Store filtered and sorted media\n  const [filters, setFilters] = useState({\n    name: '',\n    genre: '',\n    rating: '',\n    duration: '',\n    ratingComparison: 'greater',\n    // Default comparison: greater than\n    durationComparison: 'greater' // Default comparison: greater than\n  });\n  const [sortConfig, setSortConfig] = useState({\n    key: 'name',\n    // Default sort key\n    direction: 'asc' // Default sort order\n  });\n\n  // Fetch all media data on initial load\n  useEffect(() => {\n    MediaService.getAll().then(response => {\n      setMedias(response.data);\n      setFilteredMedias(response.data); // Initially show all medias\n    }).catch(error => console.error(error));\n  }, []);\n\n  // Filter media based on the current filter values\n  const filterMedias = () => {\n    let filtered = [...medias]; // Copy the original list to avoid mutation\n\n    if (filters.name) {\n      filtered = filtered.filter(media => media.name.toLowerCase().includes(filters.name.toLowerCase()));\n    }\n    if (filters.genre) {\n      filtered = filtered.filter(media => media.genre.toLowerCase().includes(filters.genre.toLowerCase()));\n    }\n    if (filters.rating) {\n      filtered = filtered.filter(media => {\n        if (filters.ratingComparison === 'greater') {\n          return media.rating >= parseFloat(filters.rating);\n        }\n        return media.rating <= parseFloat(filters.rating);\n      });\n    }\n    if (filters.duration) {\n      filtered = filtered.filter(media => {\n        if (filters.durationComparison === 'greater') {\n          return media.duration >= parseInt(filters.duration);\n        }\n        return media.duration <= parseInt(filters.duration);\n      });\n    }\n    return filtered;\n  };\n\n  // Sort media based on the current sort config\n  const sortMedias = medias => {\n    const sorted = [...medias];\n    const {\n      key,\n      direction\n    } = sortConfig;\n    return sorted.sort((a, b) => {\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n  };\n\n  // Update filtered and sorted media\n  useEffect(() => {\n    let filtered = filterMedias(); // First, filter the media\n    filtered = sortMedias(filtered); // Then, sort the filtered media\n    setFilteredMedias(filtered); // Update the state\n  }, [filters, sortConfig, medias]); // Run whenever filters or sortConfig change\n\n  const handleDelete = mediaId => {\n    MediaService.delete(mediaId).then(() => {\n      // Remove the deleted media from state (UI update)\n      setMedias(medias.filter(media => media.mediaId !== mediaId));\n    }).catch(error => console.error(\"Error deleting media:\", error));\n  };\n  const handleFilterChange = (key, value) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [key]: value\n    }));\n  };\n  const handleSort = (key, direction) => {\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-page\",\n    children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n      headers: [{\n        key: 'name',\n        label: 'Name'\n      }, {\n        key: 'genre',\n        label: 'Genre'\n      }, {\n        key: 'rating',\n        label: 'Rating'\n      }, {\n        key: 'duration',\n        label: 'Duration'\n      }],\n      onFilter: handleFilterChange,\n      onSort: handleSort,\n      filters: filters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: filteredMedias.map(media => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: media.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: media.genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: media.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: media.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modify-button\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(media.mediaId),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, media.mediaId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(MediaLister, \"uQz/D184T+r0pGYjWh9lpAA7Sak=\");\n_c = MediaLister;\nexport default MediaLister;\nvar _c;\n$RefreshReg$(_c, \"MediaLister\");","map":{"version":3,"names":["React","useState","useEffect","MediaService","ListHeader","jsxDEV","_jsxDEV","MediaLister","_s","medias","setMedias","filteredMedias","setFilteredMedias","filters","setFilters","name","genre","rating","duration","ratingComparison","durationComparison","sortConfig","setSortConfig","key","direction","getAll","then","response","data","catch","error","console","filterMedias","filtered","filter","media","toLowerCase","includes","parseFloat","parseInt","sortMedias","sorted","sort","a","b","handleDelete","mediaId","delete","handleFilterChange","value","prevFilters","handleSort","className","children","headers","label","onFilter","onSort","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Antosz/my-api-frontend/src/Media/MediaLister.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MediaService from './MediaService'; // Adjust the import based on your project structure\r\nimport ListHeader from '../components/ListHeader';\r\n\r\nconst MediaLister = () => {\r\n  const [medias, setMedias] = useState([]); // Store all media\r\n  const [filteredMedias, setFilteredMedias] = useState([]); // Store filtered and sorted media\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    genre: '',\r\n    rating: '',\r\n    duration: '',\r\n    ratingComparison: 'greater', // Default comparison: greater than\r\n    durationComparison: 'greater' // Default comparison: greater than\r\n  });\r\n  const [sortConfig, setSortConfig] = useState({\r\n    key: 'name', // Default sort key\r\n    direction: 'asc' // Default sort order\r\n  });\r\n\r\n  // Fetch all media data on initial load\r\n  useEffect(() => {\r\n    MediaService.getAll()\r\n      .then(response => {\r\n        setMedias(response.data);\r\n        setFilteredMedias(response.data); // Initially show all medias\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  // Filter media based on the current filter values\r\n  const filterMedias = () => {\r\n    let filtered = [...medias]; // Copy the original list to avoid mutation\r\n\r\n    if (filters.name) {\r\n      filtered = filtered.filter(media =>\r\n        media.name.toLowerCase().includes(filters.name.toLowerCase())\r\n      );\r\n    }\r\n    if (filters.genre) {\r\n      filtered = filtered.filter(media =>\r\n        media.genre.toLowerCase().includes(filters.genre.toLowerCase())\r\n      );\r\n    }\r\n    if (filters.rating) {\r\n      filtered = filtered.filter(media => {\r\n        if (filters.ratingComparison === 'greater') {\r\n          return media.rating >= parseFloat(filters.rating);\r\n        }\r\n        return media.rating <= parseFloat(filters.rating);\r\n      });\r\n    }\r\n    if (filters.duration) {\r\n      filtered = filtered.filter(media => {\r\n        if (filters.durationComparison === 'greater') {\r\n          return media.duration >= parseInt(filters.duration);\r\n        }\r\n        return media.duration <= parseInt(filters.duration);\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  // Sort media based on the current sort config\r\n  const sortMedias = (medias) => {\r\n    const sorted = [...medias];\r\n    const { key, direction } = sortConfig;\r\n\r\n    return sorted.sort((a, b) => {\r\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\r\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  // Update filtered and sorted media\r\n  useEffect(() => {\r\n    let filtered = filterMedias(); // First, filter the media\r\n    filtered = sortMedias(filtered); // Then, sort the filtered media\r\n    setFilteredMedias(filtered); // Update the state\r\n  }, [filters, sortConfig, medias]); // Run whenever filters or sortConfig change\r\n\r\n  const handleDelete = (mediaId) => {\r\n    MediaService.delete(mediaId)\r\n      .then(() => {\r\n        // Remove the deleted media from state (UI update)\r\n        setMedias(medias.filter(media => media.mediaId !== mediaId));\r\n      })\r\n      .catch(error => console.error(\"Error deleting media:\", error));\r\n  };\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [key]: value\r\n    }));\r\n  };\r\n\r\n  const handleSort = (key, direction) => {\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-page\">\r\n      <ListHeader\r\n        headers={[\r\n          { key: 'name', label: 'Name' },\r\n          { key: 'genre', label: 'Genre' },\r\n          { key: 'rating', label: 'Rating' },\r\n          { key: 'duration', label: 'Duration' }\r\n        ]}\r\n        onFilter={handleFilterChange}\r\n        onSort={handleSort}\r\n        filters={filters}\r\n      />\r\n\r\n      {/* Table */}\r\n      <div className=\"table\">\r\n        {filteredMedias.map(media => (\r\n          <div key={media.mediaId} className=\"table-row\">\r\n            <div className=\"form-field\">{media.name}</div>\r\n            <div className=\"form-field\">{media.genre}</div>\r\n            <div className=\"form-field\">{media.rating}</div>\r\n            <div className=\"form-field\">{media.duration}</div>\r\n            <div className=\"form-field\">\r\n              <button className=\"modify-button\">Edit</button>\r\n              <button className=\"delete-button\" onClick={() => handleDelete(media.mediaId)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MediaLister;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}